{"version":3,"sources":["Navbar.js","localaxios.js","Request.js","Child.components/HomeScreen.components/Banner.js","Child.components/HomeScreen.components/Row.js","Pages/HomeScreen.js","firebase.js","Pages/Signup.js","Pages/Login.js","features/userSlice.js","App.js","app/store.js","index.js"],"names":["Navbar","useState","show","handleShow","transitionNavbar","window","scrollY","useEffect","addEventListener","removeEventListener","className","src","onClick","firebase","auth","signOut","instance","axios","create","baseURL","API_KEY","userrequests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","title","original_name","name","overview","Row","isLargeRow","fetchURL","movies","map","poster_path","id","HomeScreen","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Signup","emailref","useRef","passwordref","ref","type","placeholder","e","preventDefault","signInWithEmailAndPassword","current","value","then","authUser","console","log","catch","error","alert","message","createUserWithEmailAndPassword","Login","signin","SetSignin","alt","onSubmit","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","App","useSelector","dispatch","useDispatch","unsubscribe","onAuthStateChanged","uid","email","store","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c9e5381.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport React,{useState,useEffect} from 'react'\r\nimport './Css/Nav.css'\r\nfunction Navbar() {\r\n\r\n    const [show,handleShow]=useState(false);\r\n    const transitionNavbar=()=>{\r\n        if(window.scrollY>100)\r\n        {\r\n            handleShow(true)\r\n        }\r\n        else{\r\n            handleShow(false)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\",transitionNavbar)\r\n        return()=>{\r\n            window.removeEventListener(\"scroll\",transitionNavbar)\r\n        }\r\n    })\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <div className=\"Nav-content\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1200px-netflix_2015_logo.svg.png\" className=\"logo\" />\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" onClick={()=>firebase.auth().signOut()} className=\"avatar\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar\r\n","import axios from 'axios';\r\n\r\nconst instance=axios.create({\r\nbaseURL:\"https://api.themoviedb.org/3/\"\r\n})\r\n\r\nexport default instance;","const API_KEY=\"f96abdd75ca26b2964f373cb37c85bf4\";\r\n\r\nconst userrequests={\r\n    fetchTrending : `/trending/all/week?api_key=${API_KEY}&languages=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&languages=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n}\r\nexport default userrequests;","import axios from '../../localaxios'\r\nimport React,{useEffect,useState} from 'react'\r\nimport '../../Css/Banner.css'\r\nimport userrequests from '../../Request'\r\nfunction Banner() {\r\n    const [movie,setMovie] = useState([])\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request=await axios.get(userrequests.fetchNetflixOriginals);\r\n        setMovie(request.data.results[Math.floor(Math.random()*request.data.results.length-1)])\r\n       //the above code is for corousel slide for random ones displays there\r\n        }fetchData()\r\n    },[])\r\n    return (\r\n    <div className=\"banner\" style={{backgroundImage:`url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`,backgroundPosition:'center',backgroundSize:'cover'}}>\r\n        <div className=\"banner-content\">\r\n             <h1  className=\"banner-title\">{movie?.title || movie?.original_name || movie?.name}</h1> {/*To get the movie title from the database */}\r\n            <div className=\"banner-buttons\">\r\n                <button>PLAY</button>\r\n                <button>My List</button>\r\n            </div>\r\n            <div className=\"description\">\r\n                <p>{movie?.overview}</p></div>\r\n         </div>\r\n         <div className=\"banner-fade\"></div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import axios from '../../localaxios';\r\nimport React,{useState,useEffect} from 'react'\r\nimport'../../Css/Row.css';\r\n\r\nfunction Row({title,isLargeRow,fetchURL}) {\r\n\r\n    const [movies,setMovie]=useState([]);\r\n    const base_url=\"https://image.tmdb.org/t/p/original/\";\r\n    \r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request=await axios.get(fetchURL);\r\n            setMovie(request.data.results);\r\n            return request\r\n        }\r\n        fetchData();\r\n    },[fetchURL])\r\n    return (\r\n        <div className=\"row\">\r\n         <h2>{title}</h2>\r\n         <div className=\"row-poster\">\r\n             {\r\n             movies.map(movie=>{\r\n                 return <img src={`${base_url}${isLargeRow?movie.backdrop_path:movie.poster_path}`} className={`rowposter ${isLargeRow && \"largeImage\"}`} key={movie.id}/>\r\n            })\r\n            }\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import React from 'react'\r\nimport \"../Css/HomeScreen.css\"\r\nimport Navbar from '../Navbar'\r\nimport Banner from '../Child.components/HomeScreen.components/Banner'\r\nimport Row from '../Child.components/HomeScreen.components/Row'\r\nimport userrequests from '../Request'\r\n\r\nfunction HomeScreen() {\r\n    return (\r\n        <div className=\"Home-Screen\">\r\n            <Navbar/>\r\n            <Banner/>\r\n            <Row title=\"Netflix Originals\" isLargeRow fetchURL={userrequests.fetchNetflixOriginals}/>\r\n            <Row title=\"Trending Now\" fetchURL={userrequests.fetchTrending}/>\r\n            <Row title=\"Top-Rated\" fetchURL={userrequests.fetchTopRated}/>\r\n            <Row title=\"Action-Movies\" fetchURL={userrequests.fetchActionMovies}/>\r\n            <Row title=\"Comedy Movies\" fetchURL={userrequests.fetchComedyMovies}/>\r\n            <Row title=\"HorrorMovies\" fetchURL={userrequests.fetchHorrorMovies}/>\r\n            <Row title=\"Romance Movies\" fetchURL={userrequests.fetchRomanceMovies}/>\r\n            <Row title=\"Documentaries\" fetchURL={userrequests.fetchDocumentaries}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import  firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDjhZYS1zzVAAhA9LF7rNHxyI-JAT-RXKQ\",\r\n    authDomain: \"netflix-clone-a5a42.firebaseapp.com\",\r\n    projectId: \"netflix-clone-a5a42\",\r\n    storageBucket: \"netflix-clone-a5a42.appspot.com\",\r\n    messagingSenderId: \"665899201254\",\r\n    appId: \"1:665899201254:web:dac3e0810ac8d09a408127\"\r\n  };\r\n\r\n  const firebaseApp=firebase.initializeApp(firebaseConfig);\r\n\r\n  const auth=firebase.auth();\r\n\r\n  export {auth}\r\n","import React,{useRef} from 'react'\r\nimport \"../Css/Signup.css\";\r\nimport {auth} from '../firebase'\r\n\r\nfunction Signup() {\r\n    const emailref=useRef(null);\r\n    const passwordref=useRef(null);\r\n\r\n    const Register=(e)=>{\r\n        e.preventDefault();\r\n        auth.createUserWithEmailAndPassword(\r\n            emailref.current.value,\r\n            passwordref.current.value\r\n        ).then(authUser=>{\r\n            console.log(authUser)\r\n        }).catch(error=>{alert(error.message)})\r\n    }\r\n    const signIn=(e)=>{\r\n        e.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(\r\n            emailref.current.value,\r\n            passwordref.current.value\r\n        ).then(authUser=>{\r\n            console.log(authUser)\r\n        }).catch(error=>{alert(error.message)})\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"signup-screen\">\r\n            <form>\r\n      \r\n            <input ref={emailref} type=\"text\" placeholder=\"E mail\"/>\r\n            <input ref={passwordref} type=\"password\" placeholder=\"Password\"/>\r\n            <button onClick={signIn}>Sign in</button>\r\n            <h4>New to Netfilx <span onClick={Register}> Register Here</span> </h4>\r\n            </form> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React,{useState} from 'react'\r\nimport \"../Css/Login.css\";\r\nimport Signup from './Signup';\r\n\r\n\r\n\r\nfunction Login() {\r\nconst [signin,SetSignin]=useState(false);\r\n\r\n    const showSignUp=(e)=>{\r\n        e.preventDefault();\r\n        SetSignin(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <div className=\"Login-Header\">\r\n              \r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1200px-netflix_2015_logo.svg.png\" alt=\"logo\" className=\"Logo\"/>\r\n                \r\n            <button className=\"Login-button\">Login</button>\r\n            </div>\r\n            <div className=\"Login-body \">\r\n                {             \r\n                    signin ? (<Signup/>):(\r\n                        <>\r\n                    <h1 >Unlimited films,TV <br/> programmes and more</h1>\r\n                <h2>Watch anywhere. Cancel at any time</h2>\r\n                <h3>Ready to watch? Enter Your email to create or restart your membership</h3>\r\n                <form className=\"Login-form\" onSubmit={showSignUp}>\r\n                    <input type=\"text\" placeholder=\"EmailAddress\"></input>\r\n                    <button >Get Started </button>\r\n                </form>\r\n                </>\r\n                    )\r\n                }\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState:{\r\n        user:null\r\n    },\r\n    reducers: {\r\n        login: (state,action) => {\r\n            state.user=action.payload;\r\n        },\r\n        logout: (state) => {\r\n            state.user=null;\r\n        },\r\n\r\n    },\r\n\r\n});\r\nexport const { login,logout } = userSlice.actions;\r\nexport const selectUser = (state) => state.user.user;\r\nexport default userSlice.reducer;\r\n","import React,{useEffect} from 'react';\nimport './App.css';\nimport { useSelector,useDispatch } from 'react-redux';\nimport HomeScreen from './Pages/HomeScreen';\nimport Login from './Pages/Login';\nimport { login,logout,selectUser } from './features/userSlice';\nimport { auth } from './firebase';\n\n\nfunction App() {\n  const user=useSelector(selectUser);\n  const dispatch=useDispatch();\n  useEffect(()=>{\n    const unsubscribe=auth.onAuthStateChanged(user=>{\n      if(user){\n        dispatch(login({\n          uid:user.uid,\n          email:user.email\n        }))\n      }\n      else{\n       dispatch(logout)\n      }\n    })\n    return unsubscribe;\n  },[])\n\n\n  return (\n    <div className=\"App\">\n      {\n        !user ? (<Login/>):(<HomeScreen/>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}